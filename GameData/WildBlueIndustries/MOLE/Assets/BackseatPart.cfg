PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = WBI_Backseat
module = Part
author = Angel-125

// --- asset parameters ---
MODEL
{
    model = WildBlueIndustries/MOLE/Assets/Backseat
}
rescaleFactor = 1

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_bottom = 0.0, -0.52, 0.0, 0.0, 1.0, 0.0, 1
node_stack_top = 0.0, 0.407, 0.0, 0.0, 1.0, 0.0, 1


// --- editor parameters ---
TechRequired = advRocketry
entryCost = 1000
cost = 800
category = Pods
subcategory = 0
title = Mk1-85 Backseat
manufacturer = Wild Blue Industries
description = The Mk1-85 is what happens when engineers spill coffee on blueprints and then try to interpret the smeared results. It was originally intended as an upgraded Mk1 Command Pod, but when submitted to KSC for review, the company received a resounding "NO" in response. Wild Blue Industries saved face by offering the Mk1-85 as a backseat extension for the Mk1 that can be upgraded before launch as technology improves.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 1.1
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.15
angularDrag = 2
crashTolerance = 14
maxTemp = 3400

vesselType = Ship

// --- internal setup ---
CrewCapacity = 1

INTERNAL
{
  name = Placeholder
}

MODULE
{
    name = ModuleBackseatController
    animationName = Deploy
    startEventGUIName = Up Scope
    endEventGUIName = Down Scope
}

MODULE
{
    name = ModuleAnimateGeneric
    animationName = BackseatLights
    actionGUIName = Toggle Lights
    startEventGUIName = Lights On
    endEventGUIName = Lights Off
}

MODULE
{
    name = ModuleRCSTechCheck
    upgradeTech = advFlightControl
    objects = RCSNodes
}

MODULE
{
    name = ModuleRCS
    thrusterTransformName = rcsThruster
    thrusterPower = 0.75
    resourceName = MonoPropellant
    resourceFlowMode = STAGE_PRIORITY_FLOW
    atmosphereCurve
    {
       key = 0 260
       key = 1 100
    }
}

MODULE
{
	name = ModuleCommand
	minimumCrew = 1	
}

MODULE
{
	name = ModuleSAS
}

MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 3
	YawTorque = 3
	RollTorque = 3
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.14
	}
}

MODULE
{
	name = ModuleScienceExperiment	
	
	experimentID = crewReport
	
	experimentActionName = Crew Report
	resetActionName = Discard Crew Report
	reviewActionName = Review Report
	
	useStaging = False	
	useActionGroups = True
	hideUIwhenUnavailable = True	
	rerunnable = True
	
	xmitDataScalar = 1.0
}

MODULE
{
	name = ModuleScienceContainer
	
	reviewActionName = Review Stored Data
	storeActionName = Store Experiments
	evaOnlyStorage = True
	storageRange = 1.3
}

MODULE
{
	name = ModuleTestSubject
	
	// nowhere: 0, srf: 1, ocean: 2, atmo: 4, space: 8
	environments = 15
	
	useStaging = False
	useEvent = True
}

MODULE
{
	name = ModuleGenerator
	isAlwaysActive = false
	INPUT_RESOURCE
	{
	   name = MonoPropellant
	   rate = 0.00037
	}
	OUTPUT_RESOURCE
	{
	   name = ElectricCharge
	   rate = 0.75
	}	
}

RESOURCE
{
	name = MonoPropellant
	amount = 80
	maxAmount = 80
}

RESOURCE
{
      name = SpareParts
      amount = 15
      maxAmount = 15
      isTweakable = True
}

RESOURCE
{
	name = ElectricCharge
	amount = 100
	maxAmount = 100
}

}

@PART[WBI_Backseat]:NEEDS[Regolith]:FINAL
{
	-MODULE[ModuleGenerator] {}

	MODULE
	{
		 name = REGO_ModuleResourceConverter
		 ConverterName = MPU
		 StartActionName = Start MPU
		 StopActionName = Stop MPU
		 RecipeInputs = MonoPropellant, 0.00037
		 RecipeOutputs = ElectricCharge, 0.75, True
	}
}

@PART[WBI_Backseat]:NEEDS[DeadlyReentry]:FINAL
{
	@maxTemp = 1250 // 1700
	MODULE
	{ // this one is custom, and is a little thicker than most heat shields.
		name = ModuleHeatShield
		direction = 0, -1, 0 // bottom of pod
		reflective = 0.05 // 5% of heat is ignored at correct angle
		ablative = AblativeShielding
		loss
		{ // loss is based on the shockwave temperature (also based on density)
			key = 650 0 0 0 // start ablating at 650 degrees C
			key = 1000 64 0 0 // peak ablation at 1000 degrees C
			key = 3000 80 0 0 // max ablation at 3000 degrees C
		}
		dissipation
		{ // dissipation is based on the part's current temperature
				key = 300 0 0 0 // begin ablating at 300 degrees C
				key = 500 180 0 0 // maximum dissipation at 500 degrees C
		}
	}
	RESOURCE
	{
		name = AblativeShielding
		amount = 250
		maxAmount = 250
	}
}

@PART[WBI_Backseat]:NEEDS[KAS]:FINAL
{
    MODULE
    {
	name = KASModuleContainer
	maxSize = 40
    }
}

@PART[WBI_Backseat]:NEEDS[TacLifeSupport]
{
	@RESOURCE[ElectricCharge]
	{
		// originally 100
		@amount = 350
		@maxAmount = 350
	}

        //21 crew-days of life support
	RESOURCE
	{
		name = Food
		amount = 7.679
		maxAmount = 7.679
	}
	RESOURCE
	{
		name = Water
		amount = 5.075
		maxAmount = 5.075
	}
	RESOURCE
	{
		name = Oxygen
		amount = 777.266
		maxAmount = 777.266
	}
	RESOURCE
	{
		name = CarbonDioxide
		amount = 0
		maxAmount = 95.913
	}
	RESOURCE
	{
		name = Waste
		amount = 0
		maxAmount = 0.1
	}
	RESOURCE
	{
		name = WasteWater
		amount = 0
		maxAmount = 0.924
	}
}